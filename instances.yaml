---
AWSTemplateFormatVersion: '2010-09-09'
Description: Test instances.

Parameters:
  VPCStackName:
    Type: String
    Description: The name of the VPC Stack.
  InstanceType:
    Type: String
    Description: The AWS instance type.
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m4.large
    - t2.xlarge
    - t2.2xlarge
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    Default: t2.medium
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The key that will be used to SSH into the instance.
  LaunchPublic1:
    Type: String
    Description: Yes, to launch an instance in the first public subnet.
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'Yes'
  LaunchPublic2:
    Type: String
    Description: Yes, to launch an instance in the second public subnet.
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'
  LaunchPublic3:
    Type: String
    Description: Yes, to launch an instance in the third public subnet.
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'
  LaunchPrivate1:
    Type: String
    Description: Yes, to launch an instance in the first private subnet.
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'
  LaunchPrivate2:
    Type: String
    Description: Yes, to launch an instance in the second private subnet.
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'
  LaunchPrivate3:
    Type: String
    Description: Yes, to launch an instance in the third private subnet.
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'

# Metadata
Metadata:
  AWS::CloudFormation::Interface:

    # Parameter Groups
    ParameterGroups:
    - Label:
        default: VPC & Instance Information
      Parameters:
      - VPCStackName
      - InstanceType
      - KeyName
    - Label:
        default: Launch Zones
      Parameters:
      - LaunchPublic1
      - LaunchPublic2
      - LaunchPublic3
      - LaunchPrivate1
      - LaunchPrivate2
      - LaunchPrivate3

    # Parameter Labels
    ParameterLabels:
      VPCStackName:
        default: VPC Stack
      LaunchPublic1:
        default: Public Subnet 1
      LaunchPublic1:
        default: Public Subnet 2
      LaunchPublic3:
        default: Public Subnet 3
      LaunchPrivate1:
        default: Private Subnet 1
      LaunchPrivate2:
        default: Private Subnet 2
      LaunchPrivate3:
        default: Private Subnet 3

# Conditions
Conditions:
  Public1: !Equals [ 'Yes', !Ref LaunchPublic1 ]
  Public2: !Equals [ 'Yes', !Ref LaunchPublic2 ]
  Public3: !Equals [ 'Yes', !Ref LaunchPublic3 ]
  Private1: !Equals [ 'Yes', !Ref LaunchPrivate1 ]
  Private2: !Equals [ 'Yes', !Ref LaunchPrivate2 ]
  Private3: !Equals [ 'Yes', !Ref LaunchPrivate3 ]

# Mappings
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-4fffc834

# Resources
Resources:

  # Security Group.
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: test-instance
      GroupDescription: test-instance
      VpcId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:vpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: test-instance

  # Public 1 Instance
  Public1Instance:
    Type: AWS::EC2::Instance
    Condition: Public1
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:public-subnet-1
      Tags:
      - Key: Name
        Value: test-instance

  # Public 2 Instance
  Public2Instance:
    Type: AWS::EC2::Instance
    Condition: Public2
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:public-subnet-2
      Tags:
      - Key: Name
        Value: test-instance

  # Public 3 Instance
  Public3Instance:
    Type: AWS::EC2::Instance
    Condition: Public3
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:public-subnet-3
      Tags:
      - Key: Name
        Value: test-instance

  # Private 1 Instance
  Private1Instance:
    Type: AWS::EC2::Instance
    Condition: Private1
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:private-subnet-1
      Tags:
      - Key: Name
        Value: test-instance

  # Private 2 Instance
  Private2Instance:
    Type: AWS::EC2::Instance
    Condition: Private2
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:private-subnet-2
      Tags:
      - Key: Name
        Value: test-instance

  # Private 3 Instance
  Private3Instance:
    Type: AWS::EC2::Instance
    Condition: Private3
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue:
          Fn::Sub:
            ${VPCStackName}:private-subnet-3
      Tags:
      - Key: Name
        Value: test-instance

# Outputs:
Outputs:
  Public1Instance:
    Value:
      Ref: Public1Instance
    Export:
      Name: !Sub ${AWS::StackName}-public-1-instance
  Public2Instance:
    Value:
      Ref: Public2Instance
    Export:
      Name: !Sub ${AWS::StackName}-public-2-instance
  Public3Instance:
    Value:
      Ref: Public3Instance
    Export:
      Name: !Sub ${AWS::StackName}-public-3-instance
  Private1Instance:
    Value:
      Ref: Private1Instance
    Export:
      Name: !Sub ${AWS::StackName}-private-1-instance
  Private2Instance:
    Value:
      Ref: Private2Instance
    Export:
      Name: !Sub ${AWS::StackName}-private-2-instance
  Private3Instance:
    Value:
      Ref: Private3Instance
    Export:
      Name: !Sub ${AWS::StackName}-private-3-instance
